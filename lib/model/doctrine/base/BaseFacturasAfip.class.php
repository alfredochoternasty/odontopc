<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('FacturasAfip', 'doctrine');

/**
 * BaseFacturasAfip
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $tipofactura_id
 * @property string $pto_vta
 * @property integer $nro_factura
 * @property date $fecha
 * @property integer $cliente_id
 * @property string $cae
 * @property decimal $iva
 * @property decimal $neto
 * @property decimal $total
 * @property TipoFactura $TipoFactura
 * @property Cliente $Cliente
 * @property Resumen $Resumen
 * 
 * @method integer      getId()             Returns the current record's "id" value
 * @method integer      getTipofacturaId()  Returns the current record's "tipofactura_id" value
 * @method string       getPtoVta()         Returns the current record's "pto_vta" value
 * @method integer      getNroFactura()     Returns the current record's "nro_factura" value
 * @method date         getFecha()          Returns the current record's "fecha" value
 * @method integer      getClienteId()      Returns the current record's "cliente_id" value
 * @method string       getCae()            Returns the current record's "cae" value
 * @method decimal      getIva()            Returns the current record's "iva" value
 * @method decimal      getNeto()           Returns the current record's "neto" value
 * @method decimal      getTotal()          Returns the current record's "total" value
 * @method TipoFactura  getTipoFactura()    Returns the current record's "TipoFactura" value
 * @method Cliente      getCliente()        Returns the current record's "Cliente" value
 * @method Resumen      getResumen()        Returns the current record's "Resumen" value
 * @method FacturasAfip setId()             Sets the current record's "id" value
 * @method FacturasAfip setTipofacturaId()  Sets the current record's "tipofactura_id" value
 * @method FacturasAfip setPtoVta()         Sets the current record's "pto_vta" value
 * @method FacturasAfip setNroFactura()     Sets the current record's "nro_factura" value
 * @method FacturasAfip setFecha()          Sets the current record's "fecha" value
 * @method FacturasAfip setClienteId()      Sets the current record's "cliente_id" value
 * @method FacturasAfip setCae()            Sets the current record's "cae" value
 * @method FacturasAfip setIva()            Sets the current record's "iva" value
 * @method FacturasAfip setNeto()           Sets the current record's "neto" value
 * @method FacturasAfip setTotal()          Sets the current record's "total" value
 * @method FacturasAfip setTipoFactura()    Sets the current record's "TipoFactura" value
 * @method FacturasAfip setCliente()        Sets the current record's "Cliente" value
 * @method FacturasAfip setResumen()        Sets the current record's "Resumen" value
 * 
 * @package    odontopc
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFacturasAfip extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('facturas_afip');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('tipofactura_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('pto_vta', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('nro_factura', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('fecha', 'date', 25, array(
             'type' => 'date',
             'length' => 25,
             ));
        $this->hasColumn('cliente_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('cae', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('iva', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => 10,
             'scale' => '2',
             ));
        $this->hasColumn('neto', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => 10,
             'scale' => '2',
             ));
        $this->hasColumn('total', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => 10,
             'scale' => '2',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TipoFactura', array(
             'local' => 'tipofactura_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasOne('Cliente', array(
             'local' => 'cliente_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasOne('Resumen', array(
             'local' => 'id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));
    }
}