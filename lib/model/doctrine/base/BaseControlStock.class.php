<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ControlStock', 'doctrine');

/**
 * BaseControlStock
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $grupoprod_id
 * @property string $producto_id
 * @property string $producto_nombre
 * @property string $nro_lote
 * @property integer $cant_comprada
 * @property integer $cant_vendida
 * @property integer $stock
 * @property Producto $Producto
 * @property Grupoprod $Grupo
 * 
 * @method integer      getId()              Returns the current record's "id" value
 * @method integer      getGrupoprodId()     Returns the current record's "grupoprod_id" value
 * @method string       getProductoId()      Returns the current record's "producto_id" value
 * @method string       getProductoNombre()  Returns the current record's "producto_nombre" value
 * @method string       getNroLote()         Returns the current record's "nro_lote" value
 * @method integer      getCantComprada()    Returns the current record's "cant_comprada" value
 * @method integer      getCantVendida()     Returns the current record's "cant_vendida" value
 * @method integer      getStock()           Returns the current record's "stock" value
 * @method Producto     getProducto()        Returns the current record's "Producto" value
 * @method Grupoprod    getGrupo()           Returns the current record's "Grupo" value
 * @method ControlStock setId()              Sets the current record's "id" value
 * @method ControlStock setGrupoprodId()     Sets the current record's "grupoprod_id" value
 * @method ControlStock setProductoId()      Sets the current record's "producto_id" value
 * @method ControlStock setProductoNombre()  Sets the current record's "producto_nombre" value
 * @method ControlStock setNroLote()         Sets the current record's "nro_lote" value
 * @method ControlStock setCantComprada()    Sets the current record's "cant_comprada" value
 * @method ControlStock setCantVendida()     Sets the current record's "cant_vendida" value
 * @method ControlStock setStock()           Sets the current record's "stock" value
 * @method ControlStock setProducto()        Sets the current record's "Producto" value
 * @method ControlStock setGrupo()           Sets the current record's "Grupo" value
 * 
 * @package    odontopc
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseControlStock extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('control_stock');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('grupoprod_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('producto_id', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('producto_nombre', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('nro_lote', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('cant_comprada', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('cant_vendida', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('stock', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Producto', array(
             'local' => 'producto_id',
             'foreign' => 'id'));

        $this->hasOne('Grupoprod as Grupo', array(
             'local' => 'grupoprod_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));
    }
}