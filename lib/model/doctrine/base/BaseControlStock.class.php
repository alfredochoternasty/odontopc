<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ControlStock', 'doctrine');

/**
 * BaseControlStock
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $producto_id
 * @property string $nombre
 * @property integer $grupoprod_id
 * @property string $nro_lote
 * @property integer $zona_id
 * @property integer $comprados
 * @property integer $vendidos
 * @property integer $cant_dev
 * @property integer $stock_guardado
 * @property integer $minimo_stock
 * @property date $ult_venta
 * @property Producto $Producto
 * @property Grupoprod $Grupo
 * @property Zona $Zona
 * 
 * @method integer      getId()             Returns the current record's "id" value
 * @method integer      getProductoId()     Returns the current record's "producto_id" value
 * @method string       getNombre()         Returns the current record's "nombre" value
 * @method integer      getGrupoprodId()    Returns the current record's "grupoprod_id" value
 * @method string       getNroLote()        Returns the current record's "nro_lote" value
 * @method integer      getZonaId()         Returns the current record's "zona_id" value
 * @method integer      getComprados()      Returns the current record's "comprados" value
 * @method integer      getVendidos()       Returns the current record's "vendidos" value
 * @method integer      getCantDev()        Returns the current record's "cant_dev" value
 * @method integer      getStockGuardado()  Returns the current record's "stock_guardado" value
 * @method integer      getMinimoStock()    Returns the current record's "minimo_stock" value
 * @method date         getUltVenta()       Returns the current record's "ult_venta" value
 * @method Producto     getProducto()       Returns the current record's "Producto" value
 * @method Grupoprod    getGrupo()          Returns the current record's "Grupo" value
 * @method Zona         getZona()           Returns the current record's "Zona" value
 * @method ControlStock setId()             Sets the current record's "id" value
 * @method ControlStock setProductoId()     Sets the current record's "producto_id" value
 * @method ControlStock setNombre()         Sets the current record's "nombre" value
 * @method ControlStock setGrupoprodId()    Sets the current record's "grupoprod_id" value
 * @method ControlStock setNroLote()        Sets the current record's "nro_lote" value
 * @method ControlStock setZonaId()         Sets the current record's "zona_id" value
 * @method ControlStock setComprados()      Sets the current record's "comprados" value
 * @method ControlStock setVendidos()       Sets the current record's "vendidos" value
 * @method ControlStock setCantDev()        Sets the current record's "cant_dev" value
 * @method ControlStock setStockGuardado()  Sets the current record's "stock_guardado" value
 * @method ControlStock setMinimoStock()    Sets the current record's "minimo_stock" value
 * @method ControlStock setUltVenta()       Sets the current record's "ult_venta" value
 * @method ControlStock setProducto()       Sets the current record's "Producto" value
 * @method ControlStock setGrupo()          Sets the current record's "Grupo" value
 * @method ControlStock setZona()           Sets the current record's "Zona" value
 * 
 * @package    odontopc
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseControlStock extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('control_stock');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('producto_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('nombre', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('grupoprod_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('nro_lote', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('zona_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('comprados', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('vendidos', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('cant_dev', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('stock_guardado', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('minimo_stock', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('ult_venta', 'date', 25, array(
             'type' => 'date',
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Producto', array(
             'local' => 'producto_id',
             'foreign' => 'id'));

        $this->hasOne('Grupoprod as Grupo', array(
             'local' => 'grupoprod_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasOne('Zona', array(
             'local' => 'zona_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));
    }
}