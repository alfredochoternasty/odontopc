<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('DevProducto', 'doctrine');

/**
 * BaseDevProducto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property date $fecha
 * @property integer $cliente_id
 * @property integer $resumen_id
 * @property integer $producto_id
 * @property integer $cantidad
 * @property decimal $precio
 * @property decimal $total
 * @property string $observacion
 * @property string $nro_lote
 * @property decimal $iva
 * @property integer $usuario
 * @property Cliente $Cliente
 * @property Resumen $Resumen
 * @property Producto $Producto
 * @property sfGuardUser $sfGuardUser
 * 
 * @method integer     getId()          Returns the current record's "id" value
 * @method date        getFecha()       Returns the current record's "fecha" value
 * @method integer     getClienteId()   Returns the current record's "cliente_id" value
 * @method integer     getResumenId()   Returns the current record's "resumen_id" value
 * @method integer     getProductoId()  Returns the current record's "producto_id" value
 * @method integer     getCantidad()    Returns the current record's "cantidad" value
 * @method decimal     getPrecio()      Returns the current record's "precio" value
 * @method decimal     getTotal()       Returns the current record's "total" value
 * @method string      getObservacion() Returns the current record's "observacion" value
 * @method string      getNroLote()     Returns the current record's "nro_lote" value
 * @method decimal     getIva()         Returns the current record's "iva" value
 * @method integer     getUsuario()     Returns the current record's "usuario" value
 * @method Cliente     getCliente()     Returns the current record's "Cliente" value
 * @method Resumen     getResumen()     Returns the current record's "Resumen" value
 * @method Producto    getProducto()    Returns the current record's "Producto" value
 * @method sfGuardUser getSfGuardUser() Returns the current record's "sfGuardUser" value
 * @method DevProducto setId()          Sets the current record's "id" value
 * @method DevProducto setFecha()       Sets the current record's "fecha" value
 * @method DevProducto setClienteId()   Sets the current record's "cliente_id" value
 * @method DevProducto setResumenId()   Sets the current record's "resumen_id" value
 * @method DevProducto setProductoId()  Sets the current record's "producto_id" value
 * @method DevProducto setCantidad()    Sets the current record's "cantidad" value
 * @method DevProducto setPrecio()      Sets the current record's "precio" value
 * @method DevProducto setTotal()       Sets the current record's "total" value
 * @method DevProducto setObservacion() Sets the current record's "observacion" value
 * @method DevProducto setNroLote()     Sets the current record's "nro_lote" value
 * @method DevProducto setIva()         Sets the current record's "iva" value
 * @method DevProducto setUsuario()     Sets the current record's "usuario" value
 * @method DevProducto setCliente()     Sets the current record's "Cliente" value
 * @method DevProducto setResumen()     Sets the current record's "Resumen" value
 * @method DevProducto setProducto()    Sets the current record's "Producto" value
 * @method DevProducto setSfGuardUser() Sets the current record's "sfGuardUser" value
 * 
 * @package    odontopc
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDevProducto extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('dev_producto');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('fecha', 'date', 25, array(
             'type' => 'date',
             'notnull' => true,
             'length' => 25,
             ));
        $this->hasColumn('cliente_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('resumen_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('producto_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('cantidad', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'length' => 4,
             ));
        $this->hasColumn('precio', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => 10,
             'scale' => '2',
             ));
        $this->hasColumn('total', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => 10,
             'scale' => '2',
             ));
        $this->hasColumn('observacion', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('nro_lote', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('iva', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => 10,
             'scale' => '2',
             ));
        $this->hasColumn('usuario', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Cliente', array(
             'local' => 'cliente_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasOne('Resumen', array(
             'local' => 'resumen_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasOne('Producto', array(
             'local' => 'producto_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasOne('sfGuardUser', array(
             'local' => 'usuario',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));
    }
}