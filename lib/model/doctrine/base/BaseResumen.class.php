<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Resumen', 'doctrine');

/**
 * BaseResumen
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property date $fecha
 * @property integer $cliente_id
 * @property integer $lista_id
 * @property integer $moneda_id
 * @property string $observacion
 * @property integer $pagado
 * @property integer $pedido_id
 * @property integer $nro_factura
 * @property integer $tipofactura_id
 * @property Doctrine_Collection $Detalle
 * @property Cliente $Cliente
 * @property Venta $Venta
 * @property Doctrine_Collection $Cobros
 * @property ListaPrecio $Lista
 * @property TipoMoneda $Moneda
 * @property Pedido $Pedido
 * @property TipoFactura $TipoFactura
 * @property Doctrine_Collection $DevProducto
 * @property Doctrine_Collection $CobroResumen
 * @property Doctrine_Collection $ControlStock
 * 
 * @method integer             getId()             Returns the current record's "id" value
 * @method date                getFecha()          Returns the current record's "fecha" value
 * @method integer             getClienteId()      Returns the current record's "cliente_id" value
 * @method integer             getListaId()        Returns the current record's "lista_id" value
 * @method integer             getMonedaId()       Returns the current record's "moneda_id" value
 * @method string              getObservacion()    Returns the current record's "observacion" value
 * @method integer             getPagado()         Returns the current record's "pagado" value
 * @method integer             getPedidoId()       Returns the current record's "pedido_id" value
 * @method integer             getNroFactura()     Returns the current record's "nro_factura" value
 * @method integer             getTipofacturaId()  Returns the current record's "tipofactura_id" value
 * @method Doctrine_Collection getDetalle()        Returns the current record's "Detalle" collection
 * @method Cliente             getCliente()        Returns the current record's "Cliente" value
 * @method Venta               getVenta()          Returns the current record's "Venta" value
 * @method Doctrine_Collection getCobros()         Returns the current record's "Cobros" collection
 * @method ListaPrecio         getLista()          Returns the current record's "Lista" value
 * @method TipoMoneda          getMoneda()         Returns the current record's "Moneda" value
 * @method Pedido              getPedido()         Returns the current record's "Pedido" value
 * @method TipoFactura         getTipoFactura()    Returns the current record's "TipoFactura" value
 * @method Doctrine_Collection getDevProducto()    Returns the current record's "DevProducto" collection
 * @method Doctrine_Collection getCobroResumen()   Returns the current record's "CobroResumen" collection
 * @method Doctrine_Collection getControlStock()   Returns the current record's "ControlStock" collection
 * @method Resumen             setId()             Sets the current record's "id" value
 * @method Resumen             setFecha()          Sets the current record's "fecha" value
 * @method Resumen             setClienteId()      Sets the current record's "cliente_id" value
 * @method Resumen             setListaId()        Sets the current record's "lista_id" value
 * @method Resumen             setMonedaId()       Sets the current record's "moneda_id" value
 * @method Resumen             setObservacion()    Sets the current record's "observacion" value
 * @method Resumen             setPagado()         Sets the current record's "pagado" value
 * @method Resumen             setPedidoId()       Sets the current record's "pedido_id" value
 * @method Resumen             setNroFactura()     Sets the current record's "nro_factura" value
 * @method Resumen             setTipofacturaId()  Sets the current record's "tipofactura_id" value
 * @method Resumen             setDetalle()        Sets the current record's "Detalle" collection
 * @method Resumen             setCliente()        Sets the current record's "Cliente" value
 * @method Resumen             setVenta()          Sets the current record's "Venta" value
 * @method Resumen             setCobros()         Sets the current record's "Cobros" collection
 * @method Resumen             setLista()          Sets the current record's "Lista" value
 * @method Resumen             setMoneda()         Sets the current record's "Moneda" value
 * @method Resumen             setPedido()         Sets the current record's "Pedido" value
 * @method Resumen             setTipoFactura()    Sets the current record's "TipoFactura" value
 * @method Resumen             setDevProducto()    Sets the current record's "DevProducto" collection
 * @method Resumen             setCobroResumen()   Sets the current record's "CobroResumen" collection
 * @method Resumen             setControlStock()   Sets the current record's "ControlStock" collection
 * 
 * @package    odontopc
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseResumen extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('resumen');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('fecha', 'date', 25, array(
             'type' => 'date',
             'notnull' => true,
             'length' => 25,
             ));
        $this->hasColumn('cliente_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('lista_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('moneda_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('observacion', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('pagado', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('pedido_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('nro_factura', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('tipofactura_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('DetalleResumen as Detalle', array(
             'local' => 'id',
             'foreign' => 'resumen_id'));

        $this->hasOne('Cliente', array(
             'local' => 'cliente_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasOne('Venta', array(
             'local' => 'id',
             'foreign' => 'resumen_id'));

        $this->hasMany('Cobro as Cobros', array(
             'local' => 'id',
             'foreign' => 'resumen_id'));

        $this->hasOne('ListaPrecio as Lista', array(
             'local' => 'lista_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasOne('TipoMoneda as Moneda', array(
             'local' => 'moneda_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasOne('Pedido', array(
             'local' => 'pedido_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasOne('TipoFactura', array(
             'local' => 'tipofactura_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasMany('DevProducto', array(
             'local' => 'id',
             'foreign' => 'resumen_id'));

        $this->hasMany('CobroResumen', array(
             'local' => 'id',
             'foreign' => 'resumen_id'));

        $this->hasMany('ControlStock', array(
             'local' => 'id',
             'foreign' => 'resumen_id'));
    }
}