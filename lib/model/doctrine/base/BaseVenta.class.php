<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Venta', 'doctrine');

/**
 * BaseVenta
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $cliente_id
 * @property integer $resumen_id
 * @property integer $numero
 * @property integer $tipofactura_id
 * @property date $fecha
 * @property integer $moneda_id
 * @property string $observacion
 * @property Resumen $Resumen
 * @property Doctrine_Collection $Detalle
 * @property TipoMoneda $Moneda
 * @property Cliente $Cliente
 * @property TipoFactura $TipoFactura
 * 
 * @method integer             getId()             Returns the current record's "id" value
 * @method integer             getClienteId()      Returns the current record's "cliente_id" value
 * @method integer             getResumenId()      Returns the current record's "resumen_id" value
 * @method integer             getNumero()         Returns the current record's "numero" value
 * @method integer             getTipofacturaId()  Returns the current record's "tipofactura_id" value
 * @method date                getFecha()          Returns the current record's "fecha" value
 * @method integer             getMonedaId()       Returns the current record's "moneda_id" value
 * @method string              getObservacion()    Returns the current record's "observacion" value
 * @method Resumen             getResumen()        Returns the current record's "Resumen" value
 * @method Doctrine_Collection getDetalle()        Returns the current record's "Detalle" collection
 * @method TipoMoneda          getMoneda()         Returns the current record's "Moneda" value
 * @method Cliente             getCliente()        Returns the current record's "Cliente" value
 * @method TipoFactura         getTipoFactura()    Returns the current record's "TipoFactura" value
 * @method Venta               setId()             Sets the current record's "id" value
 * @method Venta               setClienteId()      Sets the current record's "cliente_id" value
 * @method Venta               setResumenId()      Sets the current record's "resumen_id" value
 * @method Venta               setNumero()         Sets the current record's "numero" value
 * @method Venta               setTipofacturaId()  Sets the current record's "tipofactura_id" value
 * @method Venta               setFecha()          Sets the current record's "fecha" value
 * @method Venta               setMonedaId()       Sets the current record's "moneda_id" value
 * @method Venta               setObservacion()    Sets the current record's "observacion" value
 * @method Venta               setResumen()        Sets the current record's "Resumen" value
 * @method Venta               setDetalle()        Sets the current record's "Detalle" collection
 * @method Venta               setMoneda()         Sets the current record's "Moneda" value
 * @method Venta               setCliente()        Sets the current record's "Cliente" value
 * @method Venta               setTipoFactura()    Sets the current record's "TipoFactura" value
 * 
 * @package    odontopc
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseVenta extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('venta');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('cliente_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('resumen_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('numero', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('tipofactura_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('fecha', 'date', 25, array(
             'type' => 'date',
             'notnull' => true,
             'length' => 25,
             ));
        $this->hasColumn('moneda_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('observacion', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Resumen', array(
             'local' => 'resumen_id',
             'foreign' => 'id'));

        $this->hasMany('DetalleVenta as Detalle', array(
             'local' => 'id',
             'foreign' => 'venta_id'));

        $this->hasOne('TipoMoneda as Moneda', array(
             'local' => 'moneda_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasOne('Cliente', array(
             'local' => 'cliente_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasOne('TipoFactura', array(
             'local' => 'tipofactura_id',
             'foreign' => 'id'));
    }
}