<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Traza2', 'doctrine');

/**
 * BaseTraza2
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $producto_id
 * @property string $nro_lote
 * @property integer $nro_venta
 * @property date $fecha_venta
 * @property integer $cliente_id
 * @property date $fecha_compra
 * @property integer $proveedor_id
 * @property integer $numero_compra
 * @property integer $cant_vendida
 * @property integer $cant_comprada
 * @property Proveedor $Proveedor
 * @property Cliente $Cliente
 * @property Producto2 $Producto2
 * 
 * @method integer   getId()            Returns the current record's "id" value
 * @method integer   getProductoId()    Returns the current record's "producto_id" value
 * @method string    getNroLote()       Returns the current record's "nro_lote" value
 * @method integer   getNroVenta()      Returns the current record's "nro_venta" value
 * @method date      getFechaVenta()    Returns the current record's "fecha_venta" value
 * @method integer   getClienteId()     Returns the current record's "cliente_id" value
 * @method date      getFechaCompra()   Returns the current record's "fecha_compra" value
 * @method integer   getProveedorId()   Returns the current record's "proveedor_id" value
 * @method integer   getNumeroCompra()  Returns the current record's "numero_compra" value
 * @method integer   getCantVendida()   Returns the current record's "cant_vendida" value
 * @method integer   getCantComprada()  Returns the current record's "cant_comprada" value
 * @method Proveedor getProveedor()     Returns the current record's "Proveedor" value
 * @method Cliente   getCliente()       Returns the current record's "Cliente" value
 * @method Producto2 getProducto2()     Returns the current record's "Producto2" value
 * @method Traza2    setId()            Sets the current record's "id" value
 * @method Traza2    setProductoId()    Sets the current record's "producto_id" value
 * @method Traza2    setNroLote()       Sets the current record's "nro_lote" value
 * @method Traza2    setNroVenta()      Sets the current record's "nro_venta" value
 * @method Traza2    setFechaVenta()    Sets the current record's "fecha_venta" value
 * @method Traza2    setClienteId()     Sets the current record's "cliente_id" value
 * @method Traza2    setFechaCompra()   Sets the current record's "fecha_compra" value
 * @method Traza2    setProveedorId()   Sets the current record's "proveedor_id" value
 * @method Traza2    setNumeroCompra()  Sets the current record's "numero_compra" value
 * @method Traza2    setCantVendida()   Sets the current record's "cant_vendida" value
 * @method Traza2    setCantComprada()  Sets the current record's "cant_comprada" value
 * @method Traza2    setProveedor()     Sets the current record's "Proveedor" value
 * @method Traza2    setCliente()       Sets the current record's "Cliente" value
 * @method Traza2    setProducto2()     Sets the current record's "Producto2" value
 * 
 * @package    odontopc
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTraza2 extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('traza2');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('producto_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('nro_lote', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('nro_venta', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('fecha_venta', 'date', 25, array(
             'type' => 'date',
             'length' => 25,
             ));
        $this->hasColumn('cliente_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('fecha_compra', 'date', 25, array(
             'type' => 'date',
             'length' => 25,
             ));
        $this->hasColumn('proveedor_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('numero_compra', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('cant_vendida', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('cant_comprada', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Proveedor', array(
             'local' => 'proveedor_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasOne('Cliente', array(
             'local' => 'cliente_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasOne('Producto2', array(
             'local' => 'producto_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));
    }
}