<?php

/**
 * Resumen
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    odontopc
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Resumen extends BaseResumen
{
  public function __toString()
  {
		if (empty($this->nro_factura)) {
			return $this->getTipoFactura().' - 0005 -'.str_pad($this->id, 8, 0, STR_PAD_LEFT);;
		} else {
			return $this->getTipoFactura().' - '.str_pad($this->pto_vta, 4, 0, STR_PAD_LEFT) .'-'.str_pad($this->nro_factura, 8, 0, STR_PAD_LEFT);
		}
  }

  public function getFactura()
  {
    return $this->getTipoFactura().' - '.str_pad($this->pto_vta, 4, 0, STR_PAD_LEFT) .'-'.str_pad($this->nro_factura, 8, 0, STR_PAD_LEFT);
  }

  public function SimboloMoneda(){
    return $this->getCliente()->getLista()->getMoneda()->getSimbolo();
  }
  
  public function getTotalResumen($formato=false)
  {
    $suma = 0;
    foreach($this->getDetalle() as $det){
      $suma += $det->getTotal();
    }
		if ($formato)
			return sprintf($this->SimboloMoneda()." %01.2f", $suma);
		else
			return $suma;
  }

  public function getSubTotalResumen()
  {
    $suma = 0;
    foreach($this->getDetalle() as $det){
      $suma += $det->getSubTotal();
    }
    return $suma;
  }
  
  public function getIVATotalResumen()
  {
    $suma = 0;
    foreach($this->getDetalle() as $det){
      $suma += $det->getIva();
    }
    return $suma;
  }
  
  public function getTotalResumenFormato(){
    return sprintf($this->SimboloMoneda()." %01.2f", $this->getTotalResumen());
  }   
  
  public function getTotalFacturado(){
    return $this->getVenta()->getTotal();
  }

  public function getTotalDevuelto(){
    $suma = 0;
    foreach($this->getCobros() as $dev){
      $suma += $dev->getMonto();
    }
    return $suma;
  }
  
  public function getTotalCobrado(){
    $suma = 0;
    foreach($this->getCobroResumen() as $cobro){
      $suma += $cobro->getMonto();
    }
    return $suma;
  }
  
  public function getTotalGeneraComision(){
    $suma = 0;
    foreach($this->getDetalle() as $det){
      if(($det->getProducto()->getGeneraComision() == 1) && ($det->getCliente()->getGeneraComision() == 1))
        $suma += $det->getTotal();
    }
    return $suma;
  }
  
  public function getCuitCliente(){
	  return str_replace('-', '', trim($this->getCliente()->cuit));
  }
	
  public function getDescRemito(){
    $val = $this->getFecha().' - '.$this->getNroFactura().' - '.$this->getCliente();
    return empty($val)? '' : $val;
  }	
/*	
	public function getDatosRemito(){
		$remito = Doctrine::getTable('Resumen')->find($this->remito_id);
		$val = empty($remito)?'':$remito->getNroFactura().' - '.$remito->getFechaDMY();
    return $val;
	}
*/	
	public function getFechaDMY(){
		return implode('/', array_reverse(explode('-', $this->getFecha())));
	}
	
	public function getFechaYMD(){
		return str_replace('-', '', $this->fecha);
	}
	
/*
	public function vendidos_remito() {
		$sql = "
			select sum(total) as monto
			from detalle_resumen dr join resumen r on dr.resumen_id = r.id
			where 
				remito_id =".$this->id;
		$con = Doctrine_Manager::getInstance()->connection();
		$st = $con->execute($sql);
		$resultado = $st->fetchAll();
		return sprintf($this->SimboloMoneda()." %01.2f", $resultado[0]['monto']);
	}
*/
	
	public function devueltos_remito() {
		$sql = "
			select sum(total) as monto
			from dev_producto dr join resumen r on dr.resumen_id = r.id
			where 
				resumen_id =".$this->id;
		$con = Doctrine_Manager::getInstance()->connection();
		$st = $con->execute($sql);
		$resultado = $st->fetchAll();
		return sprintf($this->SimboloMoneda()." %01.2f", $resultado[0]['monto']);
	}
	
	public function AgregarProductoDePedido($p_datos, $p_desc) {
		$detalle_resumen = new DetalleResumen();
		$detalle_resumen->resumen_id = $this->id;
		$detalle_resumen->producto_id = $p_datos->producto_id;
		$detalle_resumen->moneda_id = 1;
		$detalle_resumen->nro_lote = $p_datos->nro_lote;
		$detalle_resumen->precio = ($p_datos->precio/1.21);
		$detalle_resumen->descuento = $p_desc;
		$detalle_resumen->cantidad = $p_datos->cantidad;
		$sub_total = ($detalle_resumen->precio -($detalle_resumen->precio * $detalle_resumen->descuento/100)) * $detalle_resumen->cantidad;
		$iva = $sub_total * 0.21;
		$total = $sub_total + $iva;
		$detalle_resumen->sub_total = $sub_total;
		$detalle_resumen->iva = $iva;
		$detalle_resumen->total = $total;
		$detalle_resumen->observacion = $p_datos->observacion;
		$detalle_resumen->save();
		return $detalle_resumen;
	}
}
