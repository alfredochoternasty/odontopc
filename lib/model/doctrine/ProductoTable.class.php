<?php

/**
 * ProductoTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ProductoTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object ProductoTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Producto');
    }
    
    public function retrieveProdConGrupo(Doctrine_Query $q){
      $rootAlias = $q->getRootAlias();
      $q->leftJoin($rootAlias . '.Grupo g');
      $q->where('grupoprod_id <> 1');
      $q->andWhere('grupoprod_id <> 15');
      //$q->andWhere('activo = 1');
      return $q;
    }
    
    public function retrieveSinInternos(Doctrine_Query $q){
      $rootAlias = $q->getRootAlias();
      $q->leftJoin($rootAlias . '.Grupo g');
      $q->leftJoin($rootAlias . '.Lote l');
      $q->where('grupoprod_id <> 1');
      $q->andWhere('grupoprod_id <> 15');
      $q->andWhere('stock < 0'); 
			$q->andWhere('activo = 1');			
      return $q;
    }
    
    public function ProdutosSinStock(Doctrine_Query $q){
      $rootAlias = $q->getRootAlias();
      $q->addSelect('r.nombre');
      $q->addSelect('l.nro_lote');
      $q->addSelect('l.stock');
      $q->addSelect('r.minimo_stock');
      $q->leftJoin($rootAlias . '.Lote l');
      $q->where('grupoprod_id <> 1');
      $q->andWhere('grupoprod_id <> 15');            
      $q->andWhere('stock <= minimo_stock');
			$q->andWhere('activo = 1');
      return $q;
    }

    static public function getArrayActivos(){
    $q = Doctrine_Query::create()
      ->from('Grupoprod g')
      ->leftJoin('g.Productos p')
      ->where('grupoprod_id not in (1, 15) or p.id = 71')
      ->andWhere('p.activo = 1')
      ->orderBy('g.nombre')
      ->addOrderBy('p.orden_grupo')
      ->addOrderBy('p.nombre');
      $res = $q->fetchArray();
      
      $choices = array("" => "");
      foreach($res as $grupos){
        $prods = array();
        foreach($grupos['Productos'] as $prod){
					if (!empty($prod['codigo'])) {
						$prods[$prod['id']] = $prod['nombre'].' ('.$prod['codigo'].')';  
					} else {
						$prods[$prod['id']] = $prod['nombre'];
					}
        }
        $choices[$grupos['nombre']] = $prods; 
      }      
      return $choices;
    }


    public function getActivos(){
			$query = Doctrine_Core::getTable('Producto')
			->createQuery('q')
      ->where('grupoprod_id not in (1, 15) or id = 71')
      ->andWhere('activo = 1')
      ->orderBy('nombre')			
      ->addOrderBy('orden_grupo');
			$result = $query->execute();
      return $result;
    }
		
    public function retrieveProdConCod(Doctrine_Query $q){
      $rootAlias = $q->getRootAlias();
      $q->leftJoin($rootAlias . '.Grupo g');
      $q->where('codigo not is nnull 1');
			$q->andWhere('activo = 1');
      return $q;
    }
}