<?php

/**
 * BasesfGuardUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $first_name
 * @property string $last_name
 * @property string $email_address
 * @property string $username
 * @property string $algorithm
 * @property string $salt
 * @property string $password
 * @property boolean $is_active
 * @property boolean $is_super_admin
 * @property timestamp $last_login
 * @property boolean $es_cliente
 * @property type: integer $zona_id
 * @property Doctrine_Collection $Groups
 * @property Doctrine_Collection $Permissions
 * @property Zona $Zona
 * @property Doctrine_Collection $UsuarioZona
 * @property Cliente $Cliente
 * @property Doctrine_Collection $sfGuardUserPermission
 * @property Doctrine_Collection $sfGuardUserGroup
 * @property sfGuardRememberKey $RememberKeys
 * @property sfGuardForgotPassword $ForgotPassword
 * @property Doctrine_Collection $Compra
 * @property Doctrine_Collection $DetalleCompra
 * @property Doctrine_Collection $Resumen
 * @property Doctrine_Collection $DetalleResumen
 * @property Doctrine_Collection $Cobro
 * @property Doctrine_Collection $DevProducto
 * @property Doctrine_Collection $ClienteSeguimiento
 * @property Doctrine_Collection $LoteAjuste
 * 
 * @method string                getFirstName()             Returns the current record's "first_name" value
 * @method string                getLastName()              Returns the current record's "last_name" value
 * @method string                getEmailAddress()          Returns the current record's "email_address" value
 * @method string                getUsername()              Returns the current record's "username" value
 * @method string                getAlgorithm()             Returns the current record's "algorithm" value
 * @method string                getSalt()                  Returns the current record's "salt" value
 * @method string                getPassword()              Returns the current record's "password" value
 * @method boolean               getIsActive()              Returns the current record's "is_active" value
 * @method boolean               getIsSuperAdmin()          Returns the current record's "is_super_admin" value
 * @method timestamp             getLastLogin()             Returns the current record's "last_login" value
 * @method boolean               getEsCliente()             Returns the current record's "es_cliente" value
 * @method Doctrine_Collection   getGroups()                Returns the current record's "Groups" collection
 * @method Doctrine_Collection   getPermissions()           Returns the current record's "Permissions" collection
 * @method Zona                  getZona()                  Returns the current record's "Zona" value
 * @method Doctrine_Collection   getUsuarioZona()           Returns the current record's "UsuarioZona" collection
 * @method Cliente               getCliente()               Returns the current record's "Cliente" value
 * @method Doctrine_Collection   getSfGuardUserPermission() Returns the current record's "sfGuardUserPermission" collection
 * @method Doctrine_Collection   getSfGuardUserGroup()      Returns the current record's "sfGuardUserGroup" collection
 * @method sfGuardRememberKey    getRememberKeys()          Returns the current record's "RememberKeys" value
 * @method sfGuardForgotPassword getForgotPassword()        Returns the current record's "ForgotPassword" value
 * @method Doctrine_Collection   getCompra()                Returns the current record's "Compra" collection
 * @method Doctrine_Collection   getDetalleCompra()         Returns the current record's "DetalleCompra" collection
 * @method Doctrine_Collection   getResumen()               Returns the current record's "Resumen" collection
 * @method Doctrine_Collection   getDetalleResumen()        Returns the current record's "DetalleResumen" collection
 * @method Doctrine_Collection   getCobro()                 Returns the current record's "Cobro" collection
 * @method Doctrine_Collection   getDevProducto()           Returns the current record's "DevProducto" collection
 * @method Doctrine_Collection   getClienteSeguimiento()    Returns the current record's "ClienteSeguimiento" collection
 * @method Doctrine_Collection   getLoteAjuste()            Returns the current record's "LoteAjuste" collection
 * @method sfGuardUser           setFirstName()             Sets the current record's "first_name" value
 * @method sfGuardUser           setLastName()              Sets the current record's "last_name" value
 * @method sfGuardUser           setEmailAddress()          Sets the current record's "email_address" value
 * @method sfGuardUser           setUsername()              Sets the current record's "username" value
 * @method sfGuardUser           setAlgorithm()             Sets the current record's "algorithm" value
 * @method sfGuardUser           setSalt()                  Sets the current record's "salt" value
 * @method sfGuardUser           setPassword()              Sets the current record's "password" value
 * @method sfGuardUser           setIsActive()              Sets the current record's "is_active" value
 * @method sfGuardUser           setIsSuperAdmin()          Sets the current record's "is_super_admin" value
 * @method sfGuardUser           setLastLogin()             Sets the current record's "last_login" value
 * @method sfGuardUser           setEsCliente()             Sets the current record's "es_cliente" value
 * @method sfGuardUser           setGroups()                Sets the current record's "Groups" collection
 * @method sfGuardUser           setPermissions()           Sets the current record's "Permissions" collection
 * @method sfGuardUser           setZona()                  Sets the current record's "Zona" value
 * @method sfGuardUser           setUsuarioZona()           Sets the current record's "UsuarioZona" collection
 * @method sfGuardUser           setCliente()               Sets the current record's "Cliente" value
 * @method sfGuardUser           setSfGuardUserPermission() Sets the current record's "sfGuardUserPermission" collection
 * @method sfGuardUser           setSfGuardUserGroup()      Sets the current record's "sfGuardUserGroup" collection
 * @method sfGuardUser           setRememberKeys()          Sets the current record's "RememberKeys" value
 * @method sfGuardUser           setForgotPassword()        Sets the current record's "ForgotPassword" value
 * @method sfGuardUser           setCompra()                Sets the current record's "Compra" collection
 * @method sfGuardUser           setDetalleCompra()         Sets the current record's "DetalleCompra" collection
 * @method sfGuardUser           setResumen()               Sets the current record's "Resumen" collection
 * @method sfGuardUser           setDetalleResumen()        Sets the current record's "DetalleResumen" collection
 * @method sfGuardUser           setCobro()                 Sets the current record's "Cobro" collection
 * @method sfGuardUser           setDevProducto()           Sets the current record's "DevProducto" collection
 * @method sfGuardUser           setClienteSeguimiento()    Sets the current record's "ClienteSeguimiento" collection
 * @method sfGuardUser           setLoteAjuste()            Sets the current record's "LoteAjuste" collection
 * 
 * @package    odontopc
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasesfGuardUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sf_guard_user');
        $this->hasColumn('first_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('last_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('email_address', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('username', 'string', 128, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 128,
             ));
        $this->hasColumn('algorithm', 'string', 128, array(
             'type' => 'string',
             'default' => 'sha1',
             'notnull' => true,
             'length' => 128,
             ));
        $this->hasColumn('salt', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('password', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             ));
        $this->hasColumn('is_super_admin', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('last_login', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('es_cliente', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('zona_id', 'type: integer', null, array(
             'type' => 'type: integer',
             ));


        $this->index('is_active_idx', array(
             'fields' => 
             array(
              0 => 'is_active',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('sfGuardGroup as Groups', array(
             'refClass' => 'sfGuardUserGroup',
             'local' => 'user_id',
             'foreign' => 'group_id'));

        $this->hasMany('sfGuardPermission as Permissions', array(
             'refClass' => 'sfGuardUserPermission',
             'local' => 'user_id',
             'foreign' => 'permission_id'));

        $this->hasOne('Zona', array(
             'local' => 'zona_id',
             'foreign' => 'id'));

        $this->hasMany('Zona as UsuarioZona', array(
             'refClass' => 'UsuarioZona',
             'local' => 'usuario',
             'foreign' => 'zona_id'));

        $this->hasOne('Cliente', array(
             'local' => 'id',
             'foreign' => 'usuario_id'));

        $this->hasMany('sfGuardUserPermission', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('sfGuardUserGroup', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasOne('sfGuardRememberKey as RememberKeys', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasOne('sfGuardForgotPassword as ForgotPassword', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Compra', array(
             'local' => 'id',
             'foreign' => 'usuario'));

        $this->hasMany('DetalleCompra', array(
             'local' => 'id',
             'foreign' => 'usuario'));

        $this->hasMany('Resumen', array(
             'local' => 'id',
             'foreign' => 'usuario'));

        $this->hasMany('DetalleResumen', array(
             'local' => 'id',
             'foreign' => 'usuario'));

        $this->hasMany('Cobro', array(
             'local' => 'id',
             'foreign' => 'usuario'));

        $this->hasMany('DevProducto', array(
             'local' => 'id',
             'foreign' => 'usuario'));

        $this->hasMany('ClienteSeguimiento', array(
             'local' => 'id',
             'foreign' => 'usuario'));

        $this->hasMany('LoteAjuste', array(
             'local' => 'id',
             'foreign' => 'usuario_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}